version: 2.1

executors:
  musish-executor:
    docker:
      - image: circleci/node:8
    working_directory: /tmp/workspace

jobs:
  setup:
    executor: musish-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "src/backend/yarn.lock" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Install dependencies
          command: cd src/backend && yarn
      - save_cache:
          paths:
            - node_modules
            - src/backend/node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}-{{ checksum "src/backend/yarn.lock" }}
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root
          paths:
            - .

  deploy:
    executor: musish-executor
    environment:
      - TARGET_BRANCH: gh-pages
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Fix Github Clone Issue
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Install Serverless CLI
          command: sudo npm i -g serverless@1.35.1
      - deploy:
          name: Deploy
          command: ./.circleci/deploy.sh

  lint:
    executor: musish-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Make Reports folder
          command: mkdir -p ~/reports
      - run:
          name: Check TSLint config compatible with Prettier
          command: yarn tslint:check-config
      - run:
          name: Run TSLint
          command: yarn tslint --formatters-dir node_modules/tslint-junit-formatter/formatters --format junit -o ~/reports/tslint.xml
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports

workflows:
  version: 2

  build_test_deploy:
    jobs:
      - setup:
          filters:
            branches:
              ignore:
                - gh-pages
                - assets
      - lint:
          requires:
            - setup
          filters:
            branches:
              ignore:
                - gh-pages
                - assets
      - deploy:
          requires:
            - lint
          filters:
            branches:
              only:
                - master
